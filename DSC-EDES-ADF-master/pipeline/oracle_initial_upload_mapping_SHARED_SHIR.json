{
	"name": "oracle_initial_upload_mapping_SHARED_SHIR",
	"properties": {
		"description": "This pipeline does not delete old data - it is meant truly only for the very first load of a warehouse",
		"activities": [
			{
				"name": "Get table names",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT st.SOURCE_OBJECT_NAME TABLE_NAME, S.SOURCE_NAME INSTANCE_NAME,\nLOAD_ARCHIVE_FLAG DELETE_LOGIC_FLAG, null BUSINESS_KEY_LIST, LOAD_ORDER,\nKEY_COLUMNS_ARCH, S.SYSTEM_DOMAIN [SYSTEM], LOWER_BOUND, PARTITION_COL_NAME_ARCH, PARTITION_COL_NAME_PROD, UPPER_BOUND\n FROM test.TBL_STAGE_TABLES ST inner join \ntest.TBL_STAGE_SOURCES S on\nST.STAGE_SOURCE_ID=S.STAGE_SOURCE_ID\nwhere  S.SOURCE_NAME='@{pipeline().parameters.instance_name}'\nORDER BY LOAD_ORDER",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CONFIG_TABLES",
						"type": "DatasetReference",
						"parameters": {
							"schema": "dbo",
							"table_name": "ADF_WMS_CONFIG_INSTANCES"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Get ARCH instance info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT S.SOURCE_NAME as INSTANCE_NAME, S.SYSTEM_DOMAIN [SYSTEM], MODE,HOST,PORT,SID,USER_NAME,PASSWORD,SOURCE_SCHEMA,TARGET_STORAGE_ACCOUNT, SYSTEM_NAME, LOWER(S.SYSTEM_DOMAIN) [SYSTEM_DOMAIN]\nFROM @{pipeline().globalParameters.environment_db}.[TBL_STAGE_ORACLE_CONNECTION_INFO] CI inner join @{pipeline().globalParameters.environment_db}.TBL_STAGE_SOURCES S on\nCI.STAGE_SOURCE_ID=S.STAGE_SOURCE_ID\nwhere S.SOURCE_NAME='@{pipeline().parameters.instance_name}' AND [MODE]='ARCH'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CONFIG_TABLES",
						"type": "DatasetReference",
						"parameters": {
							"schema": "dbo",
							"table_name": "ADF_WMS_CONFIG_INSTANCES"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Get PROD instance info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT S.SOURCE_NAME as INSTANCE_NAME, S.SYSTEM_DOMAIN [SYSTEM], MODE,HOST,PORT,SID,USER_NAME,PASSWORD,SOURCE_SCHEMA,TARGET_STORAGE_ACCOUNT, SYSTEM_NAME, LOWER(S.SYSTEM_DOMAIN) [SYSTEM_DOMAIN]\nFROM @{pipeline().globalParameters.environment_db}.[TBL_STAGE_ORACLE_CONNECTION_INFO] CI inner join @{pipeline().globalParameters.environment_db}.TBL_STAGE_SOURCES S on\nCI.STAGE_SOURCE_ID=S.STAGE_SOURCE_ID\nwhere S.SOURCE_NAME='@{pipeline().parameters.instance_name}' AND [MODE]='PROD'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CONFIG_TABLES",
						"type": "DatasetReference",
						"parameters": {
							"schema": "dbo",
							"table_name": "ADF_WMS_CONFIG_INSTANCES"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Copy each table from production",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get table names",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get PROD instance info",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get ARCH instance info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get table names').output.value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "If prod table is partitioned",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(coalesce(item().PARTITION_COL_NAME_PROD,'N/A'),'N/A')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy partitioned data from prod",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Table_name",
												"value": "@{item().TABLE_NAME}"
											},
											{
												"name": "Source",
												"value": "@{activity('Get prod instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
											},
											{
												"name": "Destination",
												"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'PROD'}/@{item().TABLE_NAME}/current/"
											}
										],
										"typeProperties": {
											"source": {
												"type": "OracleSource",
												"oracleReaderQuery": {
													"value": "SELECT * FROM @{activity('Get PROD instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}\nWHERE ?AdfRangePartitionColumnName <= ?AdfRangePartitionUpbound \nAND ?AdfRangePartitionColumnName >= ?AdfRangePartitionLowbound",
													"type": "Expression"
												},
												"partitionOption": "DynamicRange",
												"partitionSettings": {
													"partitionColumnName": {
														"value": "@{item().PARTITION_COL_NAME_PROD}",
														"type": "Expression"
													},
													"partitionUpperBound": {
														"value": "@{item().UPPER_BOUND}",
														"type": "Expression"
													},
													"partitionLowerBound": {
														"value": "@{item().LOWER_BOUND}",
														"type": "Expression"
													}
												},
												"convertDecimalToInteger": false,
												"queryTimeout": "02:00:00"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "gen_oracle_source_SHARED_SHIR",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": {
														"value": "@activity('Get PROD instance info').output.firstRow.SOURCE_SCHEMA",
														"type": "Expression"
													},
													"TableName": "SHIPMENT",
													"HOST": {
														"value": "@activity('Get PROD instance info').output.firstRow.HOST",
														"type": "Expression"
													},
													"PORT": {
														"value": "@activity('Get PROD instance info').output.firstRow.PORT",
														"type": "Expression"
													},
													"SID": {
														"value": "@activity('Get PROD instance info').output.firstRow.SID",
														"type": "Expression"
													},
													"USER_NAME": {
														"value": "@activity('Get PROD instance info').output.firstRow.USER_NAME",
														"type": "Expression"
													},
													"PASSWORD": {
														"value": "@activity('Get PROD instance info').output.firstRow.PASSWORD",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "gen_wms_sink",
												"type": "DatasetReference",
												"parameters": {
													"SOURCE_OBJECT_NAME": {
														"value": "@item().TABLE_NAME",
														"type": "Expression"
													},
													"target_instance": {
														"value": "@pipeline().parameters.instance_name",
														"type": "Expression"
													},
													"target_storage_account": {
														"value": "@activity('Get PROD instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
														"type": "Expression"
													},
													"mode": "PROD",
													"System": {
														"value": "@concat(\n    activity('Get PROD instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get PROD instance info').output.firstRow.SYSTEM_DOMAIN)",
														"type": "Expression"
													},
													"storage_container": {
														"value": "@pipeline().globalParameters.environment_container",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy unpartitioned data from prod",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Table_name",
												"value": "@{item().TABLE_NAME}"
											},
											{
												"name": "Source",
												"value": "@{activity('Get prod instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
											},
											{
												"name": "Destination",
												"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'PROD'}/@{item().TABLE_NAME}/current/"
											}
										],
										"typeProperties": {
											"source": {
												"type": "OracleSource",
												"partitionOption": "None",
												"queryTimeout": "02:00:00"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "gen_oracle_source_SHARED_SHIR",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": {
														"value": "@activity('Get PROD instance info').output.firstRow.SOURCE_SCHEMA",
														"type": "Expression"
													},
													"TableName": {
														"value": "@item().TABLE_NAME",
														"type": "Expression"
													},
													"HOST": {
														"value": "@activity('Get PROD instance info').output.firstRow.HOST",
														"type": "Expression"
													},
													"PORT": {
														"value": "@activity('Get PROD instance info').output.firstRow.PORT",
														"type": "Expression"
													},
													"SID": {
														"value": "@activity('Get PROD instance info').output.firstRow.SID",
														"type": "Expression"
													},
													"USER_NAME": {
														"value": "@activity('Get PROD instance info').output.firstRow.USER_NAME",
														"type": "Expression"
													},
													"PASSWORD": {
														"value": "@activity('Get PROD instance info').output.firstRow.PASSWORD",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "gen_wms_sink",
												"type": "DatasetReference",
												"parameters": {
													"SOURCE_OBJECT_NAME": {
														"value": "@item().TABLE_NAME",
														"type": "Expression"
													},
													"target_instance": {
														"value": "@pipeline().parameters.instance_name",
														"type": "Expression"
													},
													"target_storage_account": {
														"value": "@activity('Get PROD instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
														"type": "Expression"
													},
													"mode": "PROD",
													"System": {
														"value": "@concat(\n    activity('Get PROD instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get PROD instance info').output.firstRow.SYSTEM_DOMAIN)",
														"type": "Expression"
													},
													"storage_container": {
														"value": "@pipeline().globalParameters.environment_container",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Copy each table from archive",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Copy each table from production",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get table names').output.value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "Switch Mapping and Partitioning",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@concat(if(or(contains(pipeline().parameters.arch_tables_with_mapping,item().TABLE_NAME),contains(pipeline().parameters.arch_tables_with_mapping,'ALL')),'MAPPING','NO_MAPPING'),'-',if(equals(coalesce(item().PARTITION_COL_NAME_ARCH,'N/A'),'N/A'),'NO_PARTITIONS','PARTITIONS'))",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "MAPPING-NO_PARTITIONS",
										"activities": [
											{
												"name": "GET ARCH COL MAPPING",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "with col_mappings as (\nselect OWNER, TABLE_NAME, COLUMN_ID,  COLUMN_NAME , REGEXP_REPLACE(COLUMN_NAME, '\\W', '_') AS FIXED_COLUMN_NAME\nfrom ALL_TAB_COLUMNS\nwhere OWNER = '@{activity('Get ARCH instance info').output.firstRow.SOURCE_SCHEMA}'\nAND TABLE_NAME = '@{item().table_name}'\n)\nselect OWNER,\n        TABLE_NAME,\n        LISTAGG(CASE WHEN COLUMN_NAME = FIXED_COLUMN_NAME THEN COLUMN_NAME ELSE '\"' || COLUMN_NAME || '\" AS DW_ADJ_COL_' || FIXED_COLUMN_NAME END, ',') WITHIN GROUP (ORDER BY COLUMN_ID) AS SELECT_COLS\nfrom col_mappings\nGROUP BY OWNER, TABLE_NAME\nORDER BY TABLE_NAME;",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"dataset": {
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy map unpartitioned data from archive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "GET ARCH COL MAPPING",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "TableName",
														"value": "@{item().TABLE_NAME}"
													},
													{
														"name": "Source",
														"value": "@{activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
													},
													{
														"name": "Destination",
														"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'ARCH'}/@{item().TABLE_NAME}/current/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "SELECT @{activity('GET ARCH COL MAPPING').output.value[0].SELECT_COLS} FROM @{activity('Get ARCH instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}",
															"type": "Expression"
														},
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "gen_wms_sink",
														"type": "DatasetReference",
														"parameters": {
															"SOURCE_OBJECT_NAME": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"target_instance": {
																"value": "@pipeline().parameters.instance_name",
																"type": "Expression"
															},
															"target_storage_account": {
																"value": "@activity('Get ARCH instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
																"type": "Expression"
															},
															"mode": "ARCH",
															"System": {
																"value": "@concat(\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_DOMAIN)",
																"type": "Expression"
															},
															"storage_container": {
																"value": "@pipeline().globalParameters.environment_container",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "MAPPING-PARTITIONS",
										"activities": [
											{
												"name": "GET ARCH COL MAPPING PART",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "with col_mappings as (\nselect OWNER, TABLE_NAME, COLUMN_ID,  COLUMN_NAME , REGEXP_REPLACE(COLUMN_NAME, '\\W', '_') AS FIXED_COLUMN_NAME\nfrom ALL_TAB_COLUMNS\nwhere OWNER = '@{activity('Get ARCH instance info').output.firstRow.SOURCE_SCHEMA}'\nAND TABLE_NAME = '@{item().table_name}'\n)\nselect OWNER,\n        TABLE_NAME,\n        LISTAGG(CASE WHEN COLUMN_NAME = FIXED_COLUMN_NAME THEN COLUMN_NAME ELSE '\"' || COLUMN_NAME || '\" AS DW_ADJ_COL_' || FIXED_COLUMN_NAME END, ',') WITHIN GROUP (ORDER BY COLUMN_ID) AS SELECT_COLS\nfrom col_mappings\nGROUP BY OWNER, TABLE_NAME\nORDER BY TABLE_NAME;",
															"type": "Expression"
														},
														"partitionOption": "None",
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"dataset": {
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "Copy map partitioned data from archive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "GET ARCH COL MAPPING PART",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "TableName",
														"value": "@{item().TABLE_NAME}"
													},
													{
														"name": "Source",
														"value": "@{activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
													},
													{
														"name": "Destination",
														"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'ARCH'}/@{item().TABLE_NAME}/current/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "SELECT @{activity('GET ARCH COL MAPPING PART').output.value[0].SELECT_COLS}  FROM @{activity('Get ARCH instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME} WHERE ?AdfRangePartitionColumnName <= ?AdfRangePartitionUpbound AND ?AdfRangePartitionColumnName >= ?AdfRangePartitionLowbound",
															"type": "Expression"
														},
														"partitionOption": "DynamicRange",
														"partitionSettings": {
															"partitionColumnName": {
																"value": "@{item().PARTITION_COL_NAME_ARCH}",
																"type": "Expression"
															},
															"partitionUpperBound": {
																"value": "@{item().UPPER_BOUND}",
																"type": "Expression"
															},
															"partitionLowerBound": {
																"value": "@{item().LOWER_BOUND}",
																"type": "Expression"
															}
														},
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "gen_wms_sink",
														"type": "DatasetReference",
														"parameters": {
															"SOURCE_OBJECT_NAME": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"target_instance": {
																"value": "@pipeline().parameters.instance_name",
																"type": "Expression"
															},
															"target_storage_account": {
																"value": "@activity('Get ARCH instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
																"type": "Expression"
															},
															"mode": "ARCH",
															"System": {
																"value": "@concat(\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_DOMAIN)",
																"type": "Expression"
															},
															"storage_container": {
																"value": "@pipeline().globalParameters.environment_container",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "NO_MAPPING-NO_PARTITIONS",
										"activities": [
											{
												"name": "Copy unpartitioned data from archive",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "TableName",
														"value": "@{item().TABLE_NAME}"
													},
													{
														"name": "Source",
														"value": "@{activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
													},
													{
														"name": "Destination",
														"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'ARCH'}/@{item().TABLE_NAME}/current/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"partitionOption": "None",
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "gen_wms_sink",
														"type": "DatasetReference",
														"parameters": {
															"SOURCE_OBJECT_NAME": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"target_instance": {
																"value": "@pipeline().parameters.instance_name",
																"type": "Expression"
															},
															"target_storage_account": {
																"value": "@activity('Get ARCH instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
																"type": "Expression"
															},
															"mode": "ARCH",
															"System": {
																"value": "@concat(\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_DOMAIN)",
																"type": "Expression"
															},
															"storage_container": {
																"value": "@pipeline().globalParameters.environment_container",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "NO_MAPPING-PARTITIONS",
										"activities": [
											{
												"name": "Copy partitioned data from archive",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "TableName",
														"value": "@{item().TABLE_NAME}"
													},
													{
														"name": "Source",
														"value": "@{activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME}"
													},
													{
														"name": "Destination",
														"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'ARCH'}/@{item().TABLE_NAME}/current/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "OracleSource",
														"oracleReaderQuery": {
															"value": "SELECT * FROM @{activity('Get ARCH instance info').output.firstRow.SOURCE_SCHEMA}.@{item().TABLE_NAME} WHERE ?AdfRangePartitionColumnName <= ?AdfRangePartitionUpbound AND ?AdfRangePartitionColumnName >= ?AdfRangePartitionLowbound",
															"type": "Expression"
														},
														"partitionOption": "DynamicRange",
														"partitionSettings": {
															"partitionColumnName": {
																"value": "@{item().PARTITION_COL_NAME_ARCH}",
																"type": "Expression"
															},
															"partitionUpperBound": {
																"value": "@{item().UPPER_BOUND}",
																"type": "Expression"
															},
															"partitionLowerBound": {
																"value": "@{item().LOWER_BOUND}",
																"type": "Expression"
															}
														},
														"convertDecimalToInteger": false,
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "gen_oracle_source_SHARED_SHIR",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@activity('Get arch instance info').output.firstRow.SOURCE_SCHEMA",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"HOST": {
																"value": "@activity('Get arch instance info').output.firstRow.HOST",
																"type": "Expression"
															},
															"PORT": {
																"value": "@activity('Get arch instance info').output.firstRow.PORT",
																"type": "Expression"
															},
															"SID": {
																"value": "@activity('Get arch instance info').output.firstRow.SID",
																"type": "Expression"
															},
															"USER_NAME": {
																"value": "@activity('Get arch instance info').output.firstRow.USER_NAME",
																"type": "Expression"
															},
															"PASSWORD": {
																"value": "@activity('Get arch instance info').output.firstRow.PASSWORD",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "gen_wms_sink",
														"type": "DatasetReference",
														"parameters": {
															"SOURCE_OBJECT_NAME": {
																"value": "@item().TABLE_NAME",
																"type": "Expression"
															},
															"target_instance": {
																"value": "@pipeline().parameters.instance_name",
																"type": "Expression"
															},
															"target_storage_account": {
																"value": "@activity('Get ARCH instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
																"type": "Expression"
															},
															"mode": "ARCH",
															"System": {
																"value": "@concat(\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get ARCH instance info').output.firstRow.SYSTEM_DOMAIN)",
																"type": "Expression"
															},
															"storage_container": {
																"value": "@pipeline().globalParameters.environment_container",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get timezone information",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy each table from archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 1,
					"retryIntervalInSeconds": 600,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": {
							"value": "SELECT DBTIMEZONE FROM DUAL",
							"type": "Expression"
						},
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "gen_oracle_source_SHARED_SHIR",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@activity('Get PROD instance info').output.firstRow.SOURCE_SCHEMA",
								"type": "Expression"
							},
							"TableName": "ALL_TAB_COLUMNS",
							"HOST": {
								"value": "@activity('Get PROD instance info').output.firstRow.HOST",
								"type": "Expression"
							},
							"PORT": {
								"value": "@activity('Get PROD instance info').output.firstRow.PORT",
								"type": "Expression"
							},
							"SID": {
								"value": "@activity('Get PROD instance info').output.firstRow.SID",
								"type": "Expression"
							},
							"USER_NAME": {
								"value": "@activity('Get PROD instance info').output.firstRow.USER_NAME",
								"type": "Expression"
							},
							"PASSWORD": {
								"value": "@activity('Get PROD instance info').output.firstRow.PASSWORD",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "gen_wms_sink",
						"type": "DatasetReference",
						"parameters": {
							"SOURCE_OBJECT_NAME": "DBTIMEZONE",
							"target_instance": {
								"value": "@pipeline().parameters.instance_name",
								"type": "Expression"
							},
							"target_storage_account": {
								"value": "@activity('Get PROD instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
								"type": "Expression"
							},
							"mode": {
								"value": "@activity('Get PROD instance info').output.firstRow.MODE",
								"type": "Expression"
							},
							"System": {
								"value": "@concat(\n    activity('Get PROD instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get PROD instance info').output.firstRow.SYSTEM_DOMAIN)",
								"type": "Expression"
							},
							"storage_container": {
								"value": "@pipeline().globalParameters.environment_container",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy from prod ALL_TAB_COLUMNS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy each table from archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Table_name",
						"value": "ALL_TAB_COLUMNS"
					},
					{
						"name": "Source",
						"value": "@{activity('Get prod instance info').output.firstRow.SOURCE_SCHEMA}.ALL_TAB_COLUMNS"
					},
					{
						"name": "Destination",
						"value": "development/adf_stage/@{'WMS'}/@{pipeline().parameters.instance_name}/@{'PROD'}/ALL_TAB_COLUMNS/current/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "gen_oracle_source_SHARED_SHIR",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "SYS",
							"TableName": {
								"value": "ALL_TAB_COLUMNS",
								"type": "Expression"
							},
							"HOST": {
								"value": "@activity('Get prod instance info').output.firstRow.HOST",
								"type": "Expression"
							},
							"PORT": {
								"value": "@activity('Get prod instance info').output.firstRow.PORT",
								"type": "Expression"
							},
							"SID": {
								"value": "@activity('Get prod instance info').output.firstRow.SID",
								"type": "Expression"
							},
							"USER_NAME": {
								"value": "@activity('Get prod instance info').output.firstRow.USER_NAME",
								"type": "Expression"
							},
							"PASSWORD": {
								"value": "@activity('Get prod instance info').output.firstRow.PASSWORD",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "gen_wms_sink",
						"type": "DatasetReference",
						"parameters": {
							"SOURCE_OBJECT_NAME": "ALL_TAB_COLUMNS",
							"target_instance": {
								"value": "@pipeline().parameters.instance_name",
								"type": "Expression"
							},
							"target_storage_account": {
								"value": "@activity('Get PROD instance info').output.firstRow.TARGET_STORAGE_ACCOUNT",
								"type": "Expression"
							},
							"mode": "PROD",
							"System": {
								"value": "@concat(\n    activity('Get PROD instance info').output.firstRow.SYSTEM_NAME,\n    '_',\n    activity('Get PROD instance info').output.firstRow.SYSTEM_DOMAIN)",
								"type": "Expression"
							},
							"storage_container": {
								"value": "@pipeline().globalParameters.environment_container",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"instance_name": {
				"type": "string",
				"defaultValue": "nlber_6"
			},
			"arch_tables_with_mapping": {
				"type": "array",
				"defaultValue": [
					"ADRMST",
					"APPT",
					"CANPCK",
					"CAR_MOVE",
					"INVDTL_HIST",
					"INVLOD_HIST",
					"INVSUB_HIST",
					"LOCMST",
					"ORD",
					"ORD_LINE",
					"ORD_LINE_NOTE",
					"ORD_NOTE",
					"PCKWRK_DTL",
					"PCKWRK_HDR",
					"SHIPMENT",
					"SHIPMENT_LINE",
					"STOP",
					"TRLR"
				]
			}
		},
		"variables": {
			"test": {
				"type": "String"
			}
		},
		"folder": {
			"name": "development/ldwh_oracle/hardcoded_shared_SHIR/initial_upload"
		},
		"annotations": [],
		"lastPublishTime": "2024-01-16T08:21:12Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}